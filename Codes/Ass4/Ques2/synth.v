/* Generated by Yosys 0.11+10 (git sha1 4871d8f19, clang 6.0.0-1ubuntu2 -fPIC -Os) */

(* dynports =  1  *)
(* hdlname = "\\Q2_submod" *)
(* src = "Q2_submod.v:1.1-9.10" *)
module \$paramod\Q2_submod\WIDTH=s32'00000000000000000000000000001000 (a, b, out);
  (* src = "Q2_submod.v:4.23-4.24" *)
  input [7:0] a;
  (* src = "Q2_submod.v:5.22-5.23" *)
  input [7:0] b;
  (* src = "Q2_submod.v:6.24-6.27" *)
  output [7:0] out;
  AND2_X1 _0_ (
    .A1(a[0]),
    .A2(b[0]),
    .Z(out[0])
  );
  AND2_X1 _1_ (
    .A1(a[1]),
    .A2(b[1]),
    .Z(out[1])
  );
  AND2_X1 _2_ (
    .A1(a[2]),
    .A2(b[2]),
    .Z(out[2])
  );
  AND2_X1 _3_ (
    .A1(a[3]),
    .A2(b[3]),
    .Z(out[3])
  );
  AND2_X1 _4_ (
    .A1(a[4]),
    .A2(b[4]),
    .Z(out[4])
  );
  AND2_X1 _5_ (
    .A1(a[5]),
    .A2(b[5]),
    .Z(out[5])
  );
  AND2_X1 _6_ (
    .A1(a[6]),
    .A2(b[6]),
    .Z(out[6])
  );
  AND2_X1 _7_ (
    .A1(a[7]),
    .A2(b[7]),
    .Z(out[7])
  );
endmodule

(* dynports =  1  *)
(* hdlname = "\\Q2_submod" *)
(* src = "Q2_submod.v:1.1-9.10" *)
module \$paramod\Q2_submod\WIDTH=s32'00000000000000000000000000100000 (a, b, out);
  (* src = "Q2_submod.v:4.23-4.24" *)
  input [31:0] a;
  (* src = "Q2_submod.v:5.22-5.23" *)
  input [31:0] b;
  (* src = "Q2_submod.v:6.24-6.27" *)
  output [31:0] out;
  AND2_X1 _00_ (
    .A1(a[0]),
    .A2(b[0]),
    .Z(out[0])
  );
  AND2_X1 _01_ (
    .A1(a[1]),
    .A2(b[1]),
    .Z(out[1])
  );
  AND2_X1 _02_ (
    .A1(a[2]),
    .A2(b[2]),
    .Z(out[2])
  );
  AND2_X1 _03_ (
    .A1(a[3]),
    .A2(b[3]),
    .Z(out[3])
  );
  AND2_X1 _04_ (
    .A1(a[4]),
    .A2(b[4]),
    .Z(out[4])
  );
  AND2_X1 _05_ (
    .A1(a[5]),
    .A2(b[5]),
    .Z(out[5])
  );
  AND2_X1 _06_ (
    .A1(a[6]),
    .A2(b[6]),
    .Z(out[6])
  );
  AND2_X1 _07_ (
    .A1(a[7]),
    .A2(b[7]),
    .Z(out[7])
  );
  AND2_X1 _08_ (
    .A1(a[8]),
    .A2(b[8]),
    .Z(out[8])
  );
  AND2_X1 _09_ (
    .A1(a[9]),
    .A2(b[9]),
    .Z(out[9])
  );
  AND2_X1 _10_ (
    .A1(a[10]),
    .A2(b[10]),
    .Z(out[10])
  );
  AND2_X1 _11_ (
    .A1(a[11]),
    .A2(b[11]),
    .Z(out[11])
  );
  AND2_X1 _12_ (
    .A1(a[12]),
    .A2(b[12]),
    .Z(out[12])
  );
  AND2_X1 _13_ (
    .A1(a[13]),
    .A2(b[13]),
    .Z(out[13])
  );
  AND2_X1 _14_ (
    .A1(a[14]),
    .A2(b[14]),
    .Z(out[14])
  );
  AND2_X1 _15_ (
    .A1(a[15]),
    .A2(b[15]),
    .Z(out[15])
  );
  AND2_X1 _16_ (
    .A1(a[16]),
    .A2(b[16]),
    .Z(out[16])
  );
  AND2_X1 _17_ (
    .A1(a[17]),
    .A2(b[17]),
    .Z(out[17])
  );
  AND2_X1 _18_ (
    .A1(a[18]),
    .A2(b[18]),
    .Z(out[18])
  );
  AND2_X1 _19_ (
    .A1(a[19]),
    .A2(b[19]),
    .Z(out[19])
  );
  AND2_X1 _20_ (
    .A1(a[20]),
    .A2(b[20]),
    .Z(out[20])
  );
  AND2_X1 _21_ (
    .A1(a[21]),
    .A2(b[21]),
    .Z(out[21])
  );
  AND2_X1 _22_ (
    .A1(a[22]),
    .A2(b[22]),
    .Z(out[22])
  );
  AND2_X1 _23_ (
    .A1(a[23]),
    .A2(b[23]),
    .Z(out[23])
  );
  AND2_X1 _24_ (
    .A1(a[24]),
    .A2(b[24]),
    .Z(out[24])
  );
  AND2_X1 _25_ (
    .A1(a[25]),
    .A2(b[25]),
    .Z(out[25])
  );
  AND2_X1 _26_ (
    .A1(a[26]),
    .A2(b[26]),
    .Z(out[26])
  );
  AND2_X1 _27_ (
    .A1(a[27]),
    .A2(b[27]),
    .Z(out[27])
  );
  AND2_X1 _28_ (
    .A1(a[28]),
    .A2(b[28]),
    .Z(out[28])
  );
  AND2_X1 _29_ (
    .A1(a[29]),
    .A2(b[29]),
    .Z(out[29])
  );
  AND2_X1 _30_ (
    .A1(a[30]),
    .A2(b[30]),
    .Z(out[30])
  );
  AND2_X1 _31_ (
    .A1(a[31]),
    .A2(b[31]),
    .Z(out[31])
  );
endmodule

(* dynports =  1  *)
(* hdlname = "\\Q2_submod" *)
(* src = "Q2_submod.v:1.1-9.10" *)
module \$paramod\Q2_submod\WIDTH=s32'00000000000000000000000001000000 (a, b, out);
  (* src = "Q2_submod.v:4.23-4.24" *)
  input [63:0] a;
  (* src = "Q2_submod.v:5.22-5.23" *)
  input [63:0] b;
  (* src = "Q2_submod.v:6.24-6.27" *)
  output [63:0] out;
  AND2_X1 _00_ (
    .A1(a[22]),
    .A2(b[22]),
    .Z(out[22])
  );
  AND2_X1 _01_ (
    .A1(a[23]),
    .A2(b[23]),
    .Z(out[23])
  );
  AND2_X1 _02_ (
    .A1(a[24]),
    .A2(b[24]),
    .Z(out[24])
  );
  AND2_X1 _03_ (
    .A1(a[25]),
    .A2(b[25]),
    .Z(out[25])
  );
  AND2_X1 _04_ (
    .A1(a[26]),
    .A2(b[26]),
    .Z(out[26])
  );
  AND2_X1 _05_ (
    .A1(a[27]),
    .A2(b[27]),
    .Z(out[27])
  );
  AND2_X1 _06_ (
    .A1(a[28]),
    .A2(b[28]),
    .Z(out[28])
  );
  AND2_X1 _07_ (
    .A1(a[29]),
    .A2(b[29]),
    .Z(out[29])
  );
  AND2_X1 _08_ (
    .A1(a[30]),
    .A2(b[30]),
    .Z(out[30])
  );
  AND2_X1 _09_ (
    .A1(a[31]),
    .A2(b[31]),
    .Z(out[31])
  );
  AND2_X1 _10_ (
    .A1(a[32]),
    .A2(b[32]),
    .Z(out[32])
  );
  AND2_X1 _11_ (
    .A1(a[33]),
    .A2(b[33]),
    .Z(out[33])
  );
  AND2_X1 _12_ (
    .A1(a[34]),
    .A2(b[34]),
    .Z(out[34])
  );
  AND2_X1 _13_ (
    .A1(a[35]),
    .A2(b[35]),
    .Z(out[35])
  );
  AND2_X1 _14_ (
    .A1(a[36]),
    .A2(b[36]),
    .Z(out[36])
  );
  AND2_X1 _15_ (
    .A1(a[37]),
    .A2(b[37]),
    .Z(out[37])
  );
  AND2_X1 _16_ (
    .A1(a[38]),
    .A2(b[38]),
    .Z(out[38])
  );
  AND2_X1 _17_ (
    .A1(a[39]),
    .A2(b[39]),
    .Z(out[39])
  );
  AND2_X1 _18_ (
    .A1(a[40]),
    .A2(b[40]),
    .Z(out[40])
  );
  AND2_X1 _19_ (
    .A1(a[41]),
    .A2(b[41]),
    .Z(out[41])
  );
  AND2_X1 _20_ (
    .A1(a[42]),
    .A2(b[42]),
    .Z(out[42])
  );
  AND2_X1 _21_ (
    .A1(a[43]),
    .A2(b[43]),
    .Z(out[43])
  );
  AND2_X1 _22_ (
    .A1(a[44]),
    .A2(b[44]),
    .Z(out[44])
  );
  AND2_X1 _23_ (
    .A1(a[45]),
    .A2(b[45]),
    .Z(out[45])
  );
  AND2_X1 _24_ (
    .A1(a[46]),
    .A2(b[46]),
    .Z(out[46])
  );
  AND2_X1 _25_ (
    .A1(a[47]),
    .A2(b[47]),
    .Z(out[47])
  );
  AND2_X1 _26_ (
    .A1(a[48]),
    .A2(b[48]),
    .Z(out[48])
  );
  AND2_X1 _27_ (
    .A1(a[49]),
    .A2(b[49]),
    .Z(out[49])
  );
  AND2_X1 _28_ (
    .A1(a[50]),
    .A2(b[50]),
    .Z(out[50])
  );
  AND2_X1 _29_ (
    .A1(a[51]),
    .A2(b[51]),
    .Z(out[51])
  );
  AND2_X1 _30_ (
    .A1(a[52]),
    .A2(b[52]),
    .Z(out[52])
  );
  AND2_X1 _31_ (
    .A1(a[53]),
    .A2(b[53]),
    .Z(out[53])
  );
  AND2_X1 _32_ (
    .A1(a[54]),
    .A2(b[54]),
    .Z(out[54])
  );
  AND2_X1 _33_ (
    .A1(a[55]),
    .A2(b[55]),
    .Z(out[55])
  );
  AND2_X1 _34_ (
    .A1(a[56]),
    .A2(b[56]),
    .Z(out[56])
  );
  AND2_X1 _35_ (
    .A1(a[57]),
    .A2(b[57]),
    .Z(out[57])
  );
  AND2_X1 _36_ (
    .A1(a[58]),
    .A2(b[58]),
    .Z(out[58])
  );
  AND2_X1 _37_ (
    .A1(a[59]),
    .A2(b[59]),
    .Z(out[59])
  );
  AND2_X1 _38_ (
    .A1(a[60]),
    .A2(b[60]),
    .Z(out[60])
  );
  AND2_X1 _39_ (
    .A1(a[61]),
    .A2(b[61]),
    .Z(out[61])
  );
  AND2_X1 _40_ (
    .A1(a[62]),
    .A2(b[62]),
    .Z(out[62])
  );
  AND2_X1 _41_ (
    .A1(a[63]),
    .A2(b[63]),
    .Z(out[63])
  );
  AND2_X1 _42_ (
    .A1(a[0]),
    .A2(b[0]),
    .Z(out[0])
  );
  AND2_X1 _43_ (
    .A1(a[1]),
    .A2(b[1]),
    .Z(out[1])
  );
  AND2_X1 _44_ (
    .A1(a[2]),
    .A2(b[2]),
    .Z(out[2])
  );
  AND2_X1 _45_ (
    .A1(a[3]),
    .A2(b[3]),
    .Z(out[3])
  );
  AND2_X1 _46_ (
    .A1(a[4]),
    .A2(b[4]),
    .Z(out[4])
  );
  AND2_X1 _47_ (
    .A1(a[5]),
    .A2(b[5]),
    .Z(out[5])
  );
  AND2_X1 _48_ (
    .A1(a[6]),
    .A2(b[6]),
    .Z(out[6])
  );
  AND2_X1 _49_ (
    .A1(a[7]),
    .A2(b[7]),
    .Z(out[7])
  );
  AND2_X1 _50_ (
    .A1(a[8]),
    .A2(b[8]),
    .Z(out[8])
  );
  AND2_X1 _51_ (
    .A1(a[9]),
    .A2(b[9]),
    .Z(out[9])
  );
  AND2_X1 _52_ (
    .A1(a[10]),
    .A2(b[10]),
    .Z(out[10])
  );
  AND2_X1 _53_ (
    .A1(a[11]),
    .A2(b[11]),
    .Z(out[11])
  );
  AND2_X1 _54_ (
    .A1(a[12]),
    .A2(b[12]),
    .Z(out[12])
  );
  AND2_X1 _55_ (
    .A1(a[13]),
    .A2(b[13]),
    .Z(out[13])
  );
  AND2_X1 _56_ (
    .A1(a[14]),
    .A2(b[14]),
    .Z(out[14])
  );
  AND2_X1 _57_ (
    .A1(a[15]),
    .A2(b[15]),
    .Z(out[15])
  );
  AND2_X1 _58_ (
    .A1(a[16]),
    .A2(b[16]),
    .Z(out[16])
  );
  AND2_X1 _59_ (
    .A1(a[17]),
    .A2(b[17]),
    .Z(out[17])
  );
  AND2_X1 _60_ (
    .A1(a[18]),
    .A2(b[18]),
    .Z(out[18])
  );
  AND2_X1 _61_ (
    .A1(a[19]),
    .A2(b[19]),
    .Z(out[19])
  );
  AND2_X1 _62_ (
    .A1(a[20]),
    .A2(b[20]),
    .Z(out[20])
  );
  AND2_X1 _63_ (
    .A1(a[21]),
    .A2(b[21]),
    .Z(out[21])
  );
endmodule

(* top =  1  *)
(* src = "Q2.v:1.1-27.10" *)
module Q2(a, b, out);
  (* src = "Q2.v:2.17-2.18" *)
  input [63:0] a;
  (* src = "Q2.v:3.16-3.17" *)
  input [63:0] b;
  (* src = "Q2.v:4.18-4.21" *)
  output [63:0] out;
  (* src = "Q2.v:8.28-12.6" *)
  \$paramod\Q2_submod\WIDTH=s32'00000000000000000000000000001000  uut1 (
    .a(a[7:0]),
    .b(b[7:0]),
    .out(out[7:0])
  );
  (* src = "Q2.v:15.29-19.6" *)
  \$paramod\Q2_submod\WIDTH=s32'00000000000000000000000000100000  uut2 (
    .a(a[31:0]),
    .b(b[31:0]),
    .out(out[31:0])
  );
  (* src = "Q2.v:21.29-25.6" *)
  \$paramod\Q2_submod\WIDTH=s32'00000000000000000000000001000000  uut3 (
    .a(a),
    .b(b),
    .out(out)
  );
endmodule
